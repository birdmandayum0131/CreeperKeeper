stages:
  - prepare
  - build
  - deploy

variables:
  GIT_STRATEGY: none

prepare:
  stage: prepare
  image: alpine:latest
  script:
    - apk add --no-cache git
    - git clone https://github.com/birdmandayum0131/CreeperKeeper.git
    - cd CreeperKeeper
    - APP_VERSION=$(git describe --tags --abbrev=0)
    - echo "APP_VERSION=${APP_VERSION}"
    - echo "APP_VERSION=${APP_VERSION}" >> github.env
  artifacts:
    paths:
      - CreeperKeeper/
    reports:
      dotenv: CreeperKeeper/github.env

build:
  stage: build
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_VERIFY: 1
    DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"
  before_script:
    - docker info
  script:
    - cd CreeperKeeper
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - if docker manifest inspect $CI_REGISTRY_IMAGE:$APP_VERSION > /dev/null 2>&1; then
        echo "Creeper Keeper Image already exists, skipping build";
      else
        docker build -t $CI_REGISTRY_IMAGE:$APP_VERSION .;
        docker push $CI_REGISTRY_IMAGE:$APP_VERSION;
      fi

deploy_to_k8s:
  stage: deploy
  image: dtzar/helm-kubectl:latest
  script:
    - cd CreeperKeeper
    - kubectl config get-contexts
    - kubectl config use-context birdman0131/kubernetes-agent:k3s-home-agent
    - helm upgrade --install creeper-keeper deploy/helm/creeper-keeper -n discord-bot
      --set token.bot="$DISCORD_BOT_TOKEN"
      --set urls.minecraft="$MINECRAFT_API_URL"
      --set image.repository="$CI_REGISTRY_IMAGE"
      --set image.tag="$APP_VERSION"
      --set environment="prod"
